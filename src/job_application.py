# =============================
# 1. Imports e controle de warnings
# =============================
import warnings
warnings.filterwarnings('ignore')

import os
from crewai import Agent, Task, Crew
from crewai_tools import FileReadTool, ScrapeWebsiteTool, MDXSearchTool, SerperDevTool
from IPython.display import Markdown, display
from src.utils.config import Config

# =============================
# 2. Configura√ß√£o de ambiente e chaves de API
# =============================
def setup_api_keys():
    """Configura as chaves de API necess√°rias"""
    try:
        # Configurar OpenAI
        os.environ["OPENAI_API_KEY"] = Config.OPENAI_API_KEY or ''
        os.environ["OPENAI_MODEL_NAME"] = Config.OPENAI_MODEL_NAME or 'gpt-4-turbo'
        # Configurar Serper API para busca na web
        if Config.SERPER_API_KEY:
            os.environ["SERPER_API_KEY"] = Config.SERPER_API_KEY
            print("üîç Serper API Key configurada para busca na web!")
        else:
            print("‚ö†Ô∏è Serper API Key n√£o configurada - ferramentas de busca na web podem falhar")
        print("üîë Chaves de API configuradas com sucesso!")
        return True
    except ImportError:
        print("‚ö†Ô∏è M√≥dulo utils n√£o encontrado. Verifique se o arquivo utils.py existe.")
        return False
    except Exception as e:
        print(f"‚ùå Erro ao configurar chaves de API: {e}")
        return False

setup_api_keys()

# =============================
# 3. Defini√ß√£o das ferramentas (tools)
# =============================
search_tool = SerperDevTool()
scrape_tool = ScrapeWebsiteTool()
read_resume = FileReadTool(file_path='src/files/fake_resume.md')
semantic_search_resume = MDXSearchTool(mdx='src/files/fake_resume.md')

# =============================
# 4. Defini√ß√£o dos agentes
# =============================
pesquisador = Agent(
    role="Pesquisador de Vagas de Tecnologia",
    goal="Realizar an√°lises detalhadas de vagas de emprego para ajudar candidatos a se destacarem.",
    tools=[scrape_tool, search_tool],
    verbose=True,
    backstory=(
        "Como Pesquisador de Vagas, sua habilidade em navegar e extrair informa√ß√µes cr√≠ticas de an√∫ncios de emprego √© incompar√°vel. "
        "Suas compet√™ncias ajudam a identificar as qualifica√ß√µes e habilidades necess√°rias buscadas pelos empregadores, formando a base para personaliza√ß√£o eficaz de candidaturas."
    )
)

perfilador = Agent(
    role="Perfilador Pessoal para Engenheiros",
    goal="Realizar pesquisas aprofundadas sobre candidatos para ajud√°-los a se destacar no mercado de trabalho.",
    tools=[scrape_tool, search_tool, read_resume, semantic_search_resume],
    verbose=True,
    backstory=(
        "Com habilidades anal√≠ticas, voc√™ sintetiza informa√ß√µes de diversas fontes para criar perfis pessoais e profissionais completos, servindo de base para aprimoramento personalizado de curr√≠culos."
    )
)

estrategista_curriculo = Agent(
    role="Estrategista de Curr√≠culos para Engenheiros",
    goal="Encontrar as melhores formas de fazer um curr√≠culo se destacar no mercado de trabalho.",
    tools=[scrape_tool, search_tool, read_resume, semantic_search_resume],
    verbose=True,
    backstory=(
        "Com vis√£o estrat√©gica e aten√ß√£o aos detalhes, voc√™ refina curr√≠culos para destacar as habilidades e experi√™ncias mais relevantes, garantindo que estejam alinhados com os requisitos da vaga."
    )
)

preparador_entrevista = Agent(
    role="Preparador de Entrevistas para Engenharia",
    goal="Criar perguntas e pontos de discuss√£o para entrevistas com base no curr√≠culo e nos requisitos da vaga.",
    tools=[scrape_tool, search_tool, read_resume, semantic_search_resume],
    verbose=True,
    backstory=(
        "Seu papel √© fundamental para antecipar a din√¢mica das entrevistas. Com sua habilidade de formular perguntas-chave e pontos de discuss√£o, voc√™ prepara candidatos para o sucesso, garantindo que possam abordar com confian√ßa todos os aspectos da vaga desejada."
    )
)

# =============================
# 5. Defini√ß√£o das tasks
# =============================
tarefa_pesquisa = Task(
    description=(
        "Analise a URL da vaga fornecida ({job_posting_url}) para extrair as principais habilidades, experi√™ncias e qualifica√ß√µes exigidas. Utilize as ferramentas para coletar conte√∫do, identificar e categorizar os requisitos. Responda sempre em portugu√™s do Brasil."
    ),
    expected_output=(
        "Uma lista estruturada dos requisitos da vaga, incluindo habilidades, qualifica√ß√µes e experi√™ncias necess√°rias."
    ),
    agent=pesquisador,
    async_execution=True
)

tarefa_perfil = Task(
    description=(
        "Compile um perfil pessoal e profissional detalhado utilizando as URLs do GitHub ({github_url}) e o texto pessoal ({personal_writeup}). Utilize ferramentas para extrair e sintetizar informa√ß√µes dessas fontes. Responda sempre em portugu√™s do Brasil."
    ),
    expected_output=(
        "Um documento de perfil abrangente que inclua habilidades, experi√™ncias em projetos, contribui√ß√µes, interesses e estilo de comunica√ß√£o."
    ),
    agent=perfilador,
    async_execution=True
)

tarefa_estrategia_curriculo = Task(
    description=(
        "Utilizando o perfil e os requisitos da vaga obtidos nas tarefas anteriores, personalize o curr√≠culo para destacar as √°reas mais relevantes. Utilize ferramentas para ajustar e aprimorar o conte√∫do do curr√≠culo. N√£o invente informa√ß√µes. Atualize todas as se√ß√µes, incluindo resumo inicial, experi√™ncia profissional, habilidades e educa√ß√£o, para refletir melhor as compet√™ncias do candidato e como elas se alinham √† vaga. Responda sempre em portugu√™s do Brasil."
    ),
    expected_output=(
        "Um curr√≠culo atualizado que destaque de forma eficaz as qualifica√ß√µes e experi√™ncias do candidato relevantes para a vaga."
    ),
    output_file="files/tailored_resume.md",
    context=[tarefa_pesquisa, tarefa_perfil],
    agent=estrategista_curriculo
)

tarefa_preparacao_entrevista = Task(
    description=(
        "Crie um conjunto de poss√≠veis perguntas de entrevista e pontos de discuss√£o com base no curr√≠culo personalizado e nos requisitos da vaga. Utilize ferramentas para gerar perguntas e t√≥picos relevantes. Use essas perguntas e pontos para ajudar o candidato a destacar os principais pontos do curr√≠culo e como ele se encaixa na vaga. Responda sempre em portugu√™s do Brasil."
    ),
    expected_output=(
        "Um documento contendo perguntas-chave e pontos de discuss√£o que o candidato deve preparar para a entrevista inicial."
    ),
    output_file="files/interview_materials.md",
    context=[tarefa_pesquisa, tarefa_perfil, tarefa_estrategia_curriculo],
    agent=preparador_entrevista
)

# =============================
# 6. Defini√ß√£o da crew
# =============================
job_application_crew = Crew(
    agents=[pesquisador, perfilador, estrategista_curriculo, preparador_entrevista],
    tasks=[tarefa_pesquisa, tarefa_perfil, tarefa_estrategia_curriculo, tarefa_preparacao_entrevista],
    verbose=True
)

# =============================
# 7. Execu√ß√£o do processo e exibi√ß√£o do resultado
# =============================
job_application_inputs = {
    'job_posting_url': 'https://jobs.lever.co/AIFund/6c82e23e-d954-4dd8-a734-c0c2c5ee00f1?lever-origin=applied&lever-source%5B%5D=AI+Fund',
    'github_url': 'https://github.com/joaomdmoura',
    'personal_writeup': """Noah √© um L√≠der de Engenharia de Software com 18 anos de experi√™ncia, especializado em gest√£o de equipes remotas e presenciais, e especialista em m√∫ltiplas linguagens e frameworks. Possui MBA e forte atua√ß√£o em IA e ci√™ncia de dados. Noah liderou grandes iniciativas tecnol√≥gicas e startups, comprovando sua capacidade de impulsionar inova√ß√£o e crescimento no setor de tecnologia. Ideal para cargos de lideran√ßa que exigem vis√£o estrat√©gica e inovadora."""
}

# Esta execu√ß√£o pode demorar
result = job_application_crew.kickoff(inputs=job_application_inputs)

display(Markdown("files/tailored_resume.md"))
display(Markdown("files/interview_materials.md"))